# This -*- makefile -*- is part of Marionnet, a virtual network laboratory
# Copyright (C) 2008  Luca Saiu
# Updated in 2008 by Marco Stronati

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


COMPILE_OPTIONS += -g
DIRECTORIES_TO_INCLUDE = lablgtk2 lablglade ocamlbricks
LIBRARIES_TO_LINK = unix threads str lablgtk lablglade ocamlbricks


OBJECTS_TO_LINK = gtkThread
#PROGRAMS = marionnet.byte marionnet.native
BYTE_PROGRAMS = marionnet.byte
ROOT_BYTE_PROGRAMS = marionnet-daemon.byte

# To do: these should be enabled for release, but they take too long to
# build every time...
#NATIVE_PROGRAMS = marionnet.native
#ROOT_NATIVE_PROGRAMS = marionnet-daemon.native

#ROOT_PROGRAMS = marionnet-daemon.byte marionnet-daemon.native
OTHER_PROGRAMS_TO_INSTALL = scripts/marionnet-can-directory-host-sparse-files

# Before building the main targets we have to create the machine-generated
# sources:
marionnet.byte: version.ml gui.ml
marionnet.native: version.ml gui.ml

run: marionnet.byte
	(export WORKING=`pwd`; OCAMLRUNPARAM="b" $$WORKING/_build/marionnet.byte) | tee /tmp/LOG

runexam: marionnet.byte
	(export WORKING=`pwd`; OCAMLRUNPARAM="b" $$WORKING/_build/marionnet.byte --exam) | tee /tmp/LOG

runopt: marionnet.native
	(export WORKING=`pwd`; $$WORKING/_build/marionnet.native) | tee /tmp/LOG

run-daemon: marionnet-daemon.byte
	sudo _build/marionnet-daemon.byte

# version.ml is automatically generated:
version.ml: VERSION BUILD-TIME
	@(echo -e "(* This file is automatically generated. Please don't edit it. *)" > $@; \
	echo -e "" >> $@; \
	echo -en "let version = \"" >> $@; \
	for x in `cat VERSION`; do echo -n "$$x" >> $@; done; \
	echo -e "\";;" >> $@; \
	echo -en "let build_time = \"" >> $@; \
	for x in `cat BUILD-TIME`; do echo -n "$$x " >> $@; done; \
	echo -e "\";;" >> $@)

VERSION: META
	@($(call READ_META, name, version); \
	echo "$$version" > $@)

BUILD-TIME:
	@(echo 'built in '`date +"%B %Y"` > $@)

# We need to patch the file generated by Glade, so that image pathnames
# follow our conventions:
share/gui.glade.patched: gui.glade VERSION BUILD-TIME
	@(cat gui.glade | \
	sed s/name=\"pixbuf\"\>/name=\"pixbuf\"\>images\\//g | \
	sed s/name=\"icon\"\>/name=\"icon\"\>images\\//g | \
	sed "s/QQVERSIONQQ/`cat VERSION`/g" | \
	sed "s/QQDATEQQ/`cat BUILD-TIME`/g" > $@)

# This is the name of the Glade->OCaml code generator:
GLADE2ML = lablgladecc2

# gui.ml is automatically generated from the patched Glade file:
gui.ml: share/gui.glade.patched
#	@(cd share; $(GLADE2ML) -embed gui.glade.patched > ../$@)
	@(cd share; $(GLADE2ML) gui.glade.patched > ../$@)

# Clean all the automatically-generated sources:
clean-local:
	@(rm -f VERSION BUILD-TIME version.ml; \
	rm -f share/gui.glade.patched gui.ml)
